{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/doctor/patients": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API endpoint returns a list of all patients assigned to a doctor.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "doctor"
                ],
                "summary": "Get all patients for a doctor",
                "responses": {
                    "200": {
                        "description": "List of patients",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PatientSwagger"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/doctor/patients/{id}/notes": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API endpoint updates the notes for a specific patient identified by their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "doctor"
                ],
                "summary": "Update patient notes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Notes",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.updatePatientNotesRequestPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated patient details",
                        "schema": {
                            "$ref": "#/definitions/models.PatientSwagger"
                        }
                    },
                    "400": {
                        "description": "Invalid request (bad ID or JSON)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "This API endpoint allows users to log in by providing a username, password, and role.",
                "tags": [
                    "authentication"
                ],
                "summary": "Login to the system",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.creds"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "This API endpoint allows users to log out and clear their session.",
                "tags": [
                    "authentication"
                ],
                "summary": "Logout from the system",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to logout",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/receptionist/patients": {
            "get": {
                "description": "This API endpoint retrieves all patients from the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "receptionist"
                ],
                "summary": "Get all patients",
                "responses": {
                    "200": {
                        "description": "List of all patients",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PatientSwagger"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch patients",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API endpoint creates a new patient record in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "receptionist"
                ],
                "summary": "Add a new patient",
                "parameters": [
                    {
                        "description": "Patient Details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.addPatientRequestPOST"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Details of the created patient",
                        "schema": {
                            "$ref": "#/definitions/models.PatientSwagger"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/receptionist/patients/{id}": {
            "put": {
                "description": "This API endpoint updates the details of an existing patient using their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "receptionist"
                ],
                "summary": "Update a patient's details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Patient update data",
                        "name": "patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.updatePatientRequestPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patient details after update",
                        "schema": {
                            "$ref": "#/definitions/models.PatientSwagger"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update patient",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "This API endpoint deletes a patient by their ID.",
                "tags": [
                    "receptionist"
                ],
                "summary": "Delete a patient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patient successfully deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid patient ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete patient",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.creds": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.addPatientRequestPOST": {
            "type": "object",
            "required": [
                "age",
                "gender",
                "name"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "controllers.updatePatientNotesRequestPUT": {
            "type": "object",
            "required": [
                "notes"
            ],
            "properties": {
                "notes": {
                    "type": "string"
                }
            }
        },
        "controllers.updatePatientRequestPUT": {
            "type": "object",
            "required": [
                "age",
                "gender",
                "name"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.PatientSwagger": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        }
    }
}